# -*- coding: utf-8 -*-

"""
Django settings for store project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'al+91j^(cihq8n#a(he+w2i^g9z@=pzyu3q=u(#c-gu2qk)=hb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account',
    'shop',
    'shop_cart',
    'shop_order',
    'haystack',
    'tinymce'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'store.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'shop.context_processors.category_list',
                'django.template.context_processors.media',
                'shop_cart.context_processors.goods_num'
            ],  
        },
    },
]


WSGI_APPLICATION = 'store.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {  
    'default': {
        'ENGINE': 'django.db.backends.mysql',                   # 引擎
        'NAME': 'study_store',                                        # 库名
        'USER': 'root',                                         # 用户名
        'PASSWORD': '123123',                                   # 密码
        'HOST': '192.168.0.243',                                # 地址
        'PORT': '3306',                                         # 端口
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = "collectstatic"

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
# 发送邮件的邮箱
EMAIL_HOST_USER = '15399905591@163.com'
# 在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'wh123123'
# 收件人看到的发件人
EMAIL_FROM = 'store <15399905591@163.com>' 

# 使用django的用户功能，自定义用户的model
AUTH_USER_MODEL = "account.UserProfile"

# 当前工程的域名地址
LOCALHOST = "http://192.168.0.102:8000"

# 登陆验证跳转地址
LOGIN_URL = "/account/login" 

MEDIA_URL = '/static/images/'

MEDIA_ROOT = (
    os.path.join(BASE_DIR, 'static/images')
)

# 缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",     # cache的引擎
        "LOCATION": "redis://192.168.0.102:6379/0",  # redis的ip地址
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",  # 使用redis默认的缓存
        }
    }
}



# django-haystack搜索引擎框架配置
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'utils.whoosh_cn_backend.WhooshEngine',      #该引擎为英文搜索引擎，后面会讲怎么修改为支持中文
        'PATH': os.path.join(BASE_DIR, 'whoosh_index')
    }
}


# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'


# tinyce自定义配置
TINYMCE_DEFAULT_CONFIG = {
    "height": 600,
    "width": 400,
    "theme": "advanced",
    "preview_styles": True
}